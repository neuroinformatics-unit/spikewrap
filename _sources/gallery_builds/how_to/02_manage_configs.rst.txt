
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery_builds/how_to/02_manage_configs.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_builds_how_to_02_manage_configs.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_builds_how_to_02_manage_configs.py:


.. _configs-howto:

How to manage ``configs``
=========================

.. note::
    This is a quick how-to on ``config`` management. See :ref:`here <configs-tutorial>` for a long-form tutorial.

.. GENERATED FROM PYTHON SOURCE LINES 14-15

Show available ``configs``

.. GENERATED FROM PYTHON SOURCE LINES 15-20

.. code-block:: Python


    import spikewrap as sw

    sw.show_configs("neuropixels+kilosort2_5")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none



    The preprocessing options are: {
        "1": [
            "phase_shift",
            {}
        ],
        "2": [
            "bandpass_filter",
            {
                "freq_max": 6000,
                "freq_min": 300
            }
        ],
        "3": [
            "common_reference",
            {
                "operator": "median",
                "reference": "global"
            }
        ]
    }


    The sorting options are: {
      "kilosort2_5": {
        "car": false,
        "freq_min": 150
      }
    }




.. GENERATED FROM PYTHON SOURCE LINES 21-25

.. code-block:: Python


    print(f"These are stored at:\n"
          f"{sw.get_configs_path()}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    These are stored at:
    /home/runner/spikewrap/configs




.. GENERATED FROM PYTHON SOURCE LINES 26-27

We can create and save our own ``configs``, from the currently supported steps.

.. GENERATED FROM PYTHON SOURCE LINES 27-30

.. code-block:: Python


    sw.show_supported_preprocessing_steps()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Currently supported preprocessing steps are:
    ['phase_shift', 'bandpass_filter', 'common_reference', 'whiten', 'remove_bad_channels', 'interpolate_bad_channels', 'remove_channels', 'interpolate_channels']




.. GENERATED FROM PYTHON SOURCE LINES 31-34

By default, these will be stored in the spikewrap configs folder (otherwise, pass the
full filepath to where you want to save a ``.yaml`` file). This config can now be
used by name in ``spikewrap`` processing functions.

.. GENERATED FROM PYTHON SOURCE LINES 34-47

.. code-block:: Python


    config_dict = {
        "preprocessing": {
            "1": ["phase_shift", {}],
            "2": ["bandpass_filter", {"freq_min": 300, "freq_max": 6000}],
            "3": ["common_reference", {"operator": "median"}]
        },
        "sorting": {
            "kilosort2_5": {'car': False, 'freq_min': 150}}
    }

    sw.save_config_dict(config_dict, "my_config")








.. GENERATED FROM PYTHON SOURCE LINES 48-49

or load a ``config`` directly from ``.yaml``

.. GENERATED FROM PYTHON SOURCE LINES 49-54

.. code-block:: Python


    config_dict = sw.load_config_dict(
        sw.get_configs_path() / "neuropixels+kilosort2_5.yaml"
    )








.. GENERATED FROM PYTHON SOURCE LINES 55-56

use :func:`spikewrap.save_config_dict` to save this to the spikewrap with
a keyword name, to use by name in processing functions.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.005 seconds)


.. _sphx_glr_download_gallery_builds_how_to_02_manage_configs.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/neuroinformatics-unit/spikewrap/gh-pages?filepath=notebooks/gallery_builds/how_to/02_manage_configs.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 02_manage_configs.ipynb <02_manage_configs.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 02_manage_configs.py <02_manage_configs.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 02_manage_configs.zip <02_manage_configs.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
