
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery_builds/how_to/03_run_in_slurm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_builds_how_to_03_run_in_slurm.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_builds_how_to_03_run_in_slurm.py:


.. _slurm-howto:

How to run in SLURM
===================

.. note::
    This is a quick how-to on SLURM. See :ref:`here <slurm-tutorial>` for a long-form tutorial.

.. GENERATED FROM PYTHON SOURCE LINES 14-46

The below code will run all captured code within a single slurm job.
From within this SLURM job, the call to ``session.save_preprocessed(slurm=True)``
will spawn three additional SLURM jobs (parallelising across three runs).

After they have finished running, sorting will be run and the SLURM job will terminate.

.. code-block:: python

    import spikewrap as sw

    def capture_for_slurm():

        session = sw.Session(
            subject_path=sw.get_example_data_path() / "rawdata" / "sub-001",
            session_name="ses-001",
            file_format="spikeglx",
            run_names=["run-001, "run-002", "run-003"]
        )

        session.preprocess(configs="neuropixels+kilosort2_5")

        session.save_preprocessed(slurm=True)

        session.wait_for_slurm()

        session.sort("neuropixels+kilosort2_5", concat_runs=True, slurm=False)

    sw.run_in_slurm(
        slurm_opts=None,
        func_to_run=capture_for_slurm,
        log_base_path=session.get_output_path()
    )

.. GENERATED FROM PYTHON SOURCE LINES 49-50

Managing SLURM options - see the default SLURM options, used when ``slurm=True``

.. GENERATED FROM PYTHON SOURCE LINES 50-61

.. code-block:: Python


    import spikewrap as sw
    import json

    default_arguments = sw.default_slurm_options()

    print(
        json.dumps(default_arguments, indent=4)  # json just for visualising output
    )






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    {
        "nodes": 1,
        "mem_gb": 40,
        "timeout_min": 1440,
        "cpus_per_task": 8,
        "tasks_per_node": 1,
        "wait": false,
        "env_name": "spikewrap",
        "slurm_partition": "cpu"
    }




.. GENERATED FROM PYTHON SOURCE LINES 62-63

Otherwise, we can update these as desired:

.. GENERATED FROM PYTHON SOURCE LINES 63-75

.. code-block:: Python


    gpu_arguments = sw.default_slurm_options("gpu")

    gpu_arguments["mem_gb"] = 60
    gpu_arguments["env_name"] = "my_conda_environment"

    print(
        json.dumps(gpu_arguments, indent=4)
    )

    # and then use like:
    # session.save_preprocessed(n_jobs=12, slurm=gpu_arguments)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    {
        "nodes": 1,
        "mem_gb": 60,
        "timeout_min": 1440,
        "cpus_per_task": 8,
        "tasks_per_node": 1,
        "wait": false,
        "env_name": "my_conda_environment",
        "slurm_partition": "gpu",
        "slurm_gres": "gpu:1",
        "exclude": ""
    }





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.001 seconds)


.. _sphx_glr_download_gallery_builds_how_to_03_run_in_slurm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/neuroinformatics-unit/spikewrap/gh-pages?filepath=notebooks/gallery_builds/how_to/03_run_in_slurm.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 03_run_in_slurm.ipynb <03_run_in_slurm.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 03_run_in_slurm.py <03_run_in_slurm.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 03_run_in_slurm.zip <03_run_in_slurm.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
