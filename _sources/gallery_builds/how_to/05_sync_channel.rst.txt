
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery_builds/how_to/05_sync_channel.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_builds_how_to_05_sync_channel.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_builds_how_to_05_sync_channel.py:


.. _sync-channel-howto:

How to Edit the Sync Channel
============================

.. note::
    This is a quick how-to on working with the sync channel. See :ref:`here <sync-channel-tutorial>` for a long-form tutorial.

.. GENERATED FROM PYTHON SOURCE LINES 14-17

.. warning::
    Currently, the only supported sync channel is from Neuropixels Imec stream
    (in which it is the 385th channel). Please get in contact to see other cases supported.

.. GENERATED FROM PYTHON SOURCE LINES 17-47

.. code-block:: Python



    import spikewrap as sw

    session = sw.Session(
        subject_path=sw.get_example_data_path("openephys") / "rawdata" / "sub-001",
        session_name="ses-001",
        file_format="openephys",
        run_names="all"
    )

    session.load_raw_data()

    session.get_raw_run_names()

    # get the sync channel data as a numpy array
    run_1_sync_channel = session.get_sync_channel(run_idx= 0)

    # or plot the sync channel
    session.plot_sync_channel(run_idx=0, show=True)

    # edit the sync channel
    session.silence_sync_channel(
        run_idx=0,
        periods_to_silence=[(0, 250), (500, 750)]
    )

    # refresh the sync channel
    session.load_raw_data(overwrite=True)

    session.save_sync_channel(overwrite=True, slurm=False)


.. image-sg:: /gallery_builds/how_to/images/sphx_glr_05_sync_channel_001.png
   :alt: 05 sync channel
   :srcset: /gallery_builds/how_to/images/sphx_glr_05_sync_channel_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Loading data from path: /home/runner/work/spikewrap/spikewrap/spikewrap/examples/example_tiny_data/openephys/rawdata/sub-001/ses-001/ephys/Record Node 104/experiment1/recording1

    Loading data from path: /home/runner/work/spikewrap/spikewrap/spikewrap/examples/example_tiny_data/openephys/rawdata/sub-001/ses-001/ephys/Record Node 104/experiment1/recording2

    Loading data from path: /home/runner/work/spikewrap/spikewrap/spikewrap/examples/example_tiny_data/openephys/rawdata/sub-001/ses-001/ephys/Record Node 104/experiment1/recording1

    Loading data from path: /home/runner/work/spikewrap/spikewrap/spikewrap/examples/example_tiny_data/openephys/rawdata/sub-001/ses-001/ephys/Record Node 104/experiment1/recording2

    Saving sync channel for: recording1...

    Saving sync channel for: recording2...





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.157 seconds)


.. _sphx_glr_download_gallery_builds_how_to_05_sync_channel.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/neuroinformatics-unit/spikewrap/gh-pages?filepath=notebooks/gallery_builds/how_to/05_sync_channel.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 05_sync_channel.ipynb <05_sync_channel.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 05_sync_channel.py <05_sync_channel.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 05_sync_channel.zip <05_sync_channel.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
