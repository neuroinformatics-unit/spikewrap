
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery_builds/tutorials/05_sync_channel.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_builds_tutorials_05_sync_channel.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_builds_tutorials_05_sync_channel.py:


.. _sync-channel-tutorial:

Sync Channel Tutorial
=====================

.. note::
    This is a long-form tutorial on sorting. See :ref:`here <sync-channel-howto>` for a quick how-to.

.. GENERATED FROM PYTHON SOURCE LINES 12-19

.. code-block:: Python

    # --- hide: start ---
    import shutil
    import spikewrap as sw
    if (derivatives_path := sw.get_example_data_path("openephys") / "derivatives").is_dir():
        shutil.rmtree(derivatives_path)
    # --- hide: stop ---








.. GENERATED FROM PYTHON SOURCE LINES 20-37

.. warning::
    Currently, the only supported sync channel is from Neuropixels Imec stream
    (in which it is the 385th channel). Please get in contact to see other cases supported.

Sync channels are used in extracellular electrophysiology to coordinate timestamps
from across acquisition devices.

In ``spikewrap``, the sync channel can be inspected and edited. **This step
must be performed prior to preprocessing**.

.. warning::

    ``spikewrap`` does not currently provide any methods for concatenating the sync channel.
    This is because a straightforward concatenation may be error prone
    `(see here for more details) <https://spikeinterface.readthedocs.io/en/latest/api.html#spikeinterface.preprocessing.silence_periods>`_.
    We are keen to extend sync-channel processing functionality, please get in contact with your use-case
    to help usc extend support.

.. GENERATED FROM PYTHON SOURCE LINES 39-50

Inspecting the sync channel
---------------------------

The sync channel data can be obtained as a numpy array, or plot.
Raw data must be loaded prior to working with the sync channel.
The sync channel for a particular run is specified with the ``run_idx``
parameter. Runs are accessed in the order they are loaded (as specified
with ``run_names``, see :class:`spikewrap.Session.get_raw_run_names`).

In this toy example data, the sync channel is set to all ones (typically,
it would be all ``0`` interspersed with ``1`` indicating triggers).

.. GENERATED FROM PYTHON SOURCE LINES 50-71

.. code-block:: Python


    import spikewrap as sw

    session = sw.Session(
        subject_path=sw.get_example_data_path("openephys") / "rawdata" / "sub-001",
        session_name="ses-001",
        file_format="openephys",
        run_names="all"
    )

    session.load_raw_data()

    session.get_raw_run_names()

    # get the sync channel data as a numpy array
    run_1_sync_channel = session.get_sync_channel(run_idx= 0)

    # or plot the sync channel
    plot = session.plot_sync_channel(run_idx=0, show=True)  # TODO: accept the plot and explain. also explain the results





.. image-sg:: /gallery_builds/tutorials/images/sphx_glr_05_sync_channel_001.png
   :alt: 05 sync channel
   :srcset: /gallery_builds/tutorials/images/sphx_glr_05_sync_channel_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Loading data from path: /home/runner/work/spikewrap/spikewrap/spikewrap/examples/example_tiny_data/openephys/rawdata/sub-001/ses-001/ephys/Record Node 104/experiment1/recording1

    Loading data from path: /home/runner/work/spikewrap/spikewrap/spikewrap/examples/example_tiny_data/openephys/rawdata/sub-001/ses-001/ephys/Record Node 104/experiment1/recording2




.. GENERATED FROM PYTHON SOURCE LINES 72-77

Zeroing out the sync channel
-------------------------------

The sync channel can be edited to remove triggers by setting periods of
the sync channel to zero:

.. GENERATED FROM PYTHON SOURCE LINES 77-83

.. code-block:: Python


    session.silence_sync_channel(
        run_idx=0,
        periods_to_silence=[(0, 250), (500, 750)]
    )








.. GENERATED FROM PYTHON SOURCE LINES 84-93

The function takes a list of 2-tuples, where the entries
indicate the start and end of the period to zero (in samples).

Under the hood this uses the spikeinterface function
`silence_periods() <https://spikeinterface.readthedocs.io/en/latest/api.html#spikeinterface.preprocessing.silence_periods>`_,
to zero-out sections of the sync channel.

After plotting the edited sync channel, we see that the periods
defined above have been zeroed out:

.. GENERATED FROM PYTHON SOURCE LINES 93-96

.. code-block:: Python


    plot = session.plot_sync_channel(run_idx=0, show=True)




.. image-sg:: /gallery_builds/tutorials/images/sphx_glr_05_sync_channel_002.png
   :alt: 05 sync channel
   :srcset: /gallery_builds/tutorials/images/sphx_glr_05_sync_channel_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 97-103

Refreshing the sync channel
---------------------------

To undo any changes made to the sync-channel, the raw data
can be reloaded:


.. GENERATED FROM PYTHON SOURCE LINES 103-108

.. code-block:: Python

    session.load_raw_data(overwrite=True)

    # The sync channel is back to original (silenced periods removed)
    plot = session.plot_sync_channel(run_idx=0, show=True)




.. image-sg:: /gallery_builds/tutorials/images/sphx_glr_05_sync_channel_003.png
   :alt: 05 sync channel
   :srcset: /gallery_builds/tutorials/images/sphx_glr_05_sync_channel_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Loading data from path: /home/runner/work/spikewrap/spikewrap/spikewrap/examples/example_tiny_data/openephys/rawdata/sub-001/ses-001/ephys/Record Node 104/experiment1/recording1

    Loading data from path: /home/runner/work/spikewrap/spikewrap/spikewrap/examples/example_tiny_data/openephys/rawdata/sub-001/ses-001/ephys/Record Node 104/experiment1/recording2




.. GENERATED FROM PYTHON SOURCE LINES 109-113

Saving the sync channel
-----------------------

The sync channel can be saved with:

.. GENERATED FROM PYTHON SOURCE LINES 113-116

.. code-block:: Python


    session.save_sync_channel(overwrite=False, slurm=False)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Saving sync channel for: recording1...

    Saving sync channel for: recording2...




.. GENERATED FROM PYTHON SOURCE LINES 117-120

which will save the sync channel for all loaded runs to the run folder.
See the :ref:`SLURM tutorial <slurm-tutorial>` for more information on using slurm.



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.240 seconds)


.. _sphx_glr_download_gallery_builds_tutorials_05_sync_channel.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/neuroinformatics-unit/spikewrap/gh-pages?filepath=notebooks/gallery_builds/tutorials/05_sync_channel.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 05_sync_channel.ipynb <05_sync_channel.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 05_sync_channel.py <05_sync_channel.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 05_sync_channel.zip <05_sync_channel.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
